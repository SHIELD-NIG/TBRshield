from pybricks.hubs import PrimeHub
from pybricks.pupdevices import Motor, ColorSensor, UltrasonicSensor, ForceSensor
from pybricks.parameters import Button, Color, Direction, Port, Side, Stop
from pybricks.robotics import DriveBase
from pybricks.tools import wait, StopWatch

hub = PrimeHub()

from pybricks.hubs import PrimeHub
from pybricks.pupdevices import Motor, ColorSensor, UltrasonicSensor, ForceSensor
from pybricks.parameters import Button, Color, Direction, Port, Side, Stop
from pybricks.robotics import GyroDriveBase
from pybricks.tools import wait, StopWatch

tempo      = StopWatch()
hub        = PrimeHub()
esquerdo   = Motor(Port.F, Direction.COUNTERCLOCKWISE)
direito    = Motor(Port.B)
garra      = Motor(Port.C, Direction.COUNTERCLOCKWISE)
sobe       = Motor(Port.D)
mover      = GyroDriveBase(esquerdo, direito, 68.8, 113)
sensoresq  = ColorSensor(Port.E)
sensordir  = ColorSensor(Port.A)


Color.YELLOW = Color(h=20,s=72,v=70)
Color.RED    = Color(h=351,s=84,v=48)
Color.GREEN  = Color(h=135,s=65,v=51)
Color.NONE   = Color(h=210,s=22,v=22)
Color.BLACK  = Color(h=330,s=17,v=15)
Color.WHITE  = Color(h=208,s=27, v=88)

sensoresq.detectable_colors((Color.WHITE, Color.BLACK, Color.NONE, Color.YELLOW, Color.RED, Color.GREEN))
sensordir.detectable_colors((Color.WHITE, Color.BLACK, Color.NONE, Color.YELLOW, Color.RED, Color.GREEN))

plaquetas = [Color.RED, Color.YELLOW]
def seleciona(cor):
    if cor == Color.RED:
        return("R")
    if cor == Color.GREEN:
        return("G")
    if cor == Color.YELLOW:
        return("Y")  

def andar(distancia, velocidade=240):
    mover.settings(velocidade, 900, 203, 913)
    mover.straight(distancia*10)

def curva(graus):
    mover.turn(graus)

def subir():
    sobe.run_time(10000,850,)

def descer():
    sobe.run_time(-1000, 850,)

def abre():
    garra.run_time(350, 1000)

def fecha():
     garra.run_time(-1000, 1000)

def segueAte(cor, velocidade=200):
    while (sensordir.color() != cor) and (sensoresq.color() != cor):
        mover.drive(velocidade, 0)
    mover.stop()
try:
    curva(90)
    andar(40)
    curva(-90)
    subir()
    andar(-68,350)
    curva(-90)

    cores = [Color.RED, Color.GREEN, Color.YELLOW]

    while (sensordir.color() not in cores) and (sensoresq.color() not in cores):
        mover.drive(200,0)
    mover.stop()
    andar(1.3)

    if sensordir.color() not in cores:
        cor3 = seleciona(sensoresq.color())
    else:
        cor3 = seleciona(sensordir.color())

    andar(-3)
    curva(-90)

    while (sensordir.color() not in cores) and (sensoresq.color() not in cores):
        mover.drive(200,0)
    mover.stop()
    andar(1.3)

    if sensordir.color() not in cores:
        cor2 = seleciona(sensoresq.color())
    else:
        cor2 = seleciona(sensordir.color())

    if cor3 != 'G' and cor2 != 'G':
        cor1 = 'G'
    elif cor3 != 'Y' and cor2 != 'Y':
        cor1 = 'Y'
    elif cor3 != 'R' and cor2 != 'R':
        cor1 = 'R'

    sequencia = f'{cor1}{cor2}{cor3}'
    print(f'A sequência é {sequencia}') 

    andar(-70, 300 )
    curva(-90)

    # Início das rotinas

    if sequencia == 'RGY':
        segueAte(Color.RED)
        andar(-6)
        descer()
        andar(3)
        fecha()
        subir() # pegou arvore vermelha
        andar(-30)
        curva(90)
        andar(37)
        curva(-90)
        andar(18)
        descer()
        abre()
        subir() # entrega arvore vermelha
        mover.reset()
        andar(-15)
        curva(90)
        andar(-34)
        curva(-90)
        segueAte(Color.RED)
        andar(-3)
        descer()
        curva(90)
        segueAte(Color.YELLOW)
        andar(-1.5)
        fecha()
        subir() # pegou arvore amarela
        andar(-10)
        curva(90)
        andar(40)
        curva(-90)
        andar(34)
        curva(90)
        andar(20)
        descer()
        abre()
        subir() # entregou arvore amarela
        mover.reset()
        andar(-20)
        curva(-90)
        andar(-30)
        curva(-90)
        segueAte(Color.RED)
        andar(-1)
        curva(-90)
        descer()
        andar(15)
        fecha()
        subir() # pegou a arvore verde
        andar(-10)
        curva(-90)
        andar(35)
        curva(90)
        andar(-150,300)
    
    elif sequencia == 'GRY':
        segueAte(Color.RED)
        andar(-3)
        curva(-85)
        descer()
        andar(13)
        fecha()
        subir() # pegou arvore verde
        andar(-7)
        curva(85)
        andar(-26)
        curva(90)
        andar(44)
        curva(-90)
        andar(15)
        descer()
        abre()
        subir() # entregou arvore verde
        mover.reset()
        curva(0)
        andar(-5)
        andar(7)
        mover.stop()
        mover.reset()
        andar(-10)
        curva(90)
        andar(-33)
        curva(-90)
        segueAte(Color.RED)
        andar(-3) 
        curva(85)
        descer()
        andar(7)
        fecha()
        subir() # pegou arvore amarela
        andar(-10)
        curva(-85)
        andar(-36)
        curva(90)
        andar(34)
        curva(90)
        andar(20)
        descer()
        abre()
        subir() # entregou arvore amarela
        mover.reset()
        curva(0)
        andar(-7)
        andar(10)
        mover.stop()
        mover.reset()
        curva(0)
        andar(-20)
        curva(-90)
        andar(-37)
        curva(-90)
        segueAte(Color.RED)
        andar(-6)
        descer()
        andar(4)
        fecha()
        subir() # pegou arvore vermelha
        andar(-35)
        curva(-90)
        andar(-150, 315)

    elif sequencia == 'GYR':
        segueAte(Color.RED)
        andar(-6)
        descer()
        andar(3)
        fecha()
        subir() # pegou arvore vermelha
        andar(-32)
        curva(90)
        andar(36)
        curva(90)
        andar(25)
        descer()
        abre()
        subir() # entregou arvore vermelha
        mover.reset()
        andar(-5)
        andar(10)
        mover.stop()
        mover.reset()
        curva(0)
        andar(-10)
        curva(-90)
        andar(-40)
        curva(-90)
        segueAte(Color.RED)
        andar(-3)
        curva(-85)
        descer()
        andar(11)
        fecha()
        subir() # pegou arvore verde
        andar(-8)
        curva(85)
        andar(-23)
        curva(90)
        andar(44)
        curva(-90)
        andar(15)
        descer()
        abre()
        subir() #entregou arvore verde
        mover.stop()
        mover.reset()
        andar(-5)
        andar(10)
        mover.reset()
        andar(-10)
        curva(90)
        andar(-33)
        curva(-90)
        segueAte(Color.RED)
        andar(-3) 
        curva(85)
        descer()
        segueAte(Color.YELLOW) 
        andar(-1)
        fecha()
        subir() # pegou arvore amarela
        andar(-10)
        curva(-85)
        andar(-35)
        curva(-90)
        andar(-150, 300)

    elif sequencia == 'YGR':
        segueAte(Color.RED)
        andar(-6)
        descer()
        andar(3)
        fecha()
        subir() # pegou arvore vermelha
        andar(-32)
        curva(90)
        andar(36)
        curva(90)
        andar(25)
        descer()
        abre()
        subir() # entregou arvore vermelha
        mover.reset()
        andar(-5)
        curva(-90)
        andar(-40)
        curva(-90)
        segueAte(Color.RED)
        andar(-1)
        curva(90)
        descer()
        segueAte(Color.YELLOW)
        andar(-1)
        fecha()
        subir() # pegou arvore amarela
        curva(-90)
        andar(-22)
        curva(90)
        andar(24)
        curva(-90)
        andar(7)
        descer()
        abre()
        subir() # entregou arvore amarela
        mover.reset()
        andar(-10)
        curva(90)
        andar(-35)
        curva(-90)
        segueAte(Color.RED)
        curva(-90)
        descer()
        andar(16)
        fecha()
        subir() # pegou arvore verde
        andar(-10)
        curva(90)
        andar(-35)
        curva(-90)
        andar(-150, 300)

    elif sequencia == 'RYG':
        segueAte(Color.RED)
        andar(-10)
        descer()
        andar(8)
        fecha()
        subir() # pegou arvore vermelha
        andar(-25)
        curva(90)
        andar(36)
        curva(-90)
        andar(15)
        descer()
        abre()
        subir() # entregou arvore vermelha
        mover.reset()
        andar(-10)
        curva(90)
        andar(-35)
        curva(-90)
        segueAte(Color.RED)
        curva(-90)
        descer()
        andar(16)
        fecha()
        subir() # pegou arvore verde
        andar(-20)
        curva(90)
        andar(-35)
        curva(90)
        andar(30)
        curva(90)
        andar(25)
        descer()
        abre()
        subir() # entregou arvore verde
        mover.reset()
        andar(-10)
        curva(-90)
        andar(-30)
        curva(-90)
        segueAte(Color.RED)
        andar(-1)
        curva(90)
        descer()
        segueAte(Color.YELLOW)
        andar(-1)
        fecha()
        subir() # pegou arvore amarela
        curva(-90)
        andar(-35)
        curva(-90)
        andar(-150, 300)

    elif sequencia == 'YRG':
        segueAte(Color.RED)
        andar(-3)
        curva(90)
        descer()
        segueAte(Color.YELLOW)
        andar(-1)
        fecha()
        subir() # pegou arvore amarela
        andar(-5)
        curva(-90)
        andar(-20)
        curva(90)
        andar(30)
        curva(-90)
        andar(15)
        descer()
        abre()
        subir() # entregou arvore amarela
        mover.reset()
        andar(-10)
        curva(90)
        andar(-35)
        curva(-90)
        segueAte(Color.RED)
        andar(-3)
        curva(-90)
        descer()
        andar(16)
        fecha()
        subir() # pegou arvore verde
        andar(-20)
        curva(90)
        andar(-35)
        curva(90)
        andar(32)
        curva(90)
        andar(15)
        descer()
        abre()
        subir() # entregou arvore verde
        mover.reset()
        andar(-10)
        curva(-90)
        andar(-40)
        curva(-90)
        segueAte(Color.RED)
        andar(-4)
        descer()
        andar(1)
        fecha()
        subir() # pegou arvore vermelha
        andar(-30)
        curva(-90)
        andar(-150, 300)


    if sequencia == 'GRY' or sequencia == 'GYR':
        mover.reset()
        wait(300)
        mover.reset()
        andar(7) 
        curva(90)
        segueAte(Color.GREEN)
        andar(11)
        curva(90)
        andar(28)
        curva(90)
        andar(19)
        mover.stop()
        mover.reset()
        descer()
        abre()
        andar(-2)
        subir()
        andar(-6.5)
        curva(90)
        andar(23)
        curva(90)
        andar(7.5)
        sobe.run_time(-225,1400)
        curva(-45)
        andar(-9)
        curva(-45)
        andar(17)
        garra.run_time(100,800,wait=True)
        curva(-90)
        subir()
        andar(20)
        curva(90)
        andar(-13.5)
        mover.stop()
        wait(200)
        mover.reset()
        wait(200)
        andar(6.5)
        curva(-90)
        segueAte(Color.GREEN)
        andar(23.5)
        wait(300)
        if sensoresq.color() in plaquetas:
            plaqueta = seleciona(sensoresq.color())
        else:
            plaqueta = seleciona(sensordir.color())
        print(plaqueta)
        wait(300)
        andar(-5.5)
        sobe.run_time(-220,1500)
        curva(-60)
        andar(-14)
        curva(-30)
        mover.reset()
        fecha()
        subir()
        sobe.run_time(-205,1100)

        if plaqueta == cor3:
            andar(79)
            andar(-20)
            curva(-45)
            andar(20)
            curva(-45)
            andar(65)
            andar(-15)
            segueAte(Color.GREEN)
            andar(-13)
            
        else:
            andar(60)
            curva(60)
            andar(15)
            andar(-15)
            curva(-90)
            andar(16.5)
            curva(-60)
            andar(10)
            segueAte(Color.GREEN)
            andar(30)
            andar(-15)
            segueAte(Color.GREEN)
            andar(-13)
        
finally:
    print('O programa foi executado em: ', tempo.time()/1000, 's')
